#!/bin/sh

settitle() {
    printf "\033k$1\033\\"
}

ssh() {
    case "$TERM" in
        *256color*)
            settitle "$*"
            command ssh "$@"
            settitle "`hostname -s`"
            ;;
        *)
            command ssh "$@"
    esac
}

export TERM="xterm-256color"

# Improves tmux command so that `tmux` doesn't
# implicitly create and join an anonymous session.
# That's annoying and borderline useless.
# Instead, it joins your latest session and provides better messages
tmux () {
  # If any arguments given, tmux as usual
  if [ "$#" -gt 0 ]; then
    command tmux "$@"
    return 0
  fi

  # No server yet? Let them know how to start one
  if ! command tmux info &> /dev/null; then
    echo No tmux server. You need to start one first.
    echo Try creating a new session: 'tmux new -s <session-name>'
    return 0
  fi

  # Already inside a tmux a session? List out tmux commands using less to make it easy
  if [ -n "$TMUX" ]; then
    command tmux list-commands | less
  else
    command tmux attach
  fi
}

export NCURSES_NO_UTF8_ACS=1
tmuxmenu() {
  INPUT=/tmp/tmux_in.$$
  OUTPUT=/tmp/tmux_out.$$
  #trap "rm $OUTPUT; rm $INPUT; exit" SIGHUP SIGINT SIGTERM
 
  echo "0 NEW" > "${INPUT}"
  command tmux ls | nl | sed -r 's/^\s+([0-9]+)\s+([a-zA-Z0-9_-]+).*$/\1 \2/' >> "${INPUT}"
 
  SESSION_LIST="$(cat $INPUT | tr '\n' ' ')"
  COUNT="$(wc -l $INPUT | sed -r 's/^([0-9]+) .+$/\1/')"

  command dialog --menu 'tmux session' 0 0 $COUNT $SESSION_LIST 2> "${OUTPUT}"

  SESSION_ID="$(cat $OUTPUT)"
  if [[ $SESSION_ID -eq 0 ]]; then
    echo "New session"
    command dialog --inputbox 'session name' 0 0 2> "${OUTPUT}"
    SESSION_NAME="$(cat $OUTPUT)"

    command tmux new -s $SESSION_NAME
  else
    SESSION="$(grep -E "^$SESSION_ID " $INPUT | sed -r 's/^[0-9]+ (.+)$/\1/')"

    command tmux attach -t $SESSION
  fi
}

alias tmm='tmuxmenu'
alias tm='tmux'
alias tmls='tm ls'
alias tmnew='tm new -s '
alias tmatt='tm attach -t '
alias tmdet='tm detach'
